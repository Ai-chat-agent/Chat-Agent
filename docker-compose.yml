version: '3.8'

services:
  chat-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-agent
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=production
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=chat_agent
      - DATABASE_PASSWORD=secure_password_123
      - DATABASE_DBNAME=chat_agent_db
      - DATABASE_SSLMODE=disable
      - LOG_LEVEL=info
      - LOG_FORMAT=json
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - chat-agent-network
    volumes:
      - ./configs:/app/configs:ro

  postgres:
    image: postgres:15-alpine
    container_name: chat-agent-postgres
    environment:
      - POSTGRES_USER=chat_agent
      - POSTGRES_PASSWORD=secure_password_123
      - POSTGRES_DB=chat_agent_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - chat-agent-network

  redis:
    image: redis:7-alpine
    container_name: chat-agent-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - chat-agent-network

  nginx:
    image: nginx:alpine
    container_name: chat-agent-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - chat-agent
    restart: unless-stopped
    networks:
      - chat-agent-network

volumes:
  postgres_data:
  redis_data:

networks:
  chat-agent-network:
    driver: bridge

